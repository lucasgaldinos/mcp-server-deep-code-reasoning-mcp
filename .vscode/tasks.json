{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Build and Test Complete Workflow",
      "type": "shell",
      "command": "npm run typecheck && npm run lint && npm run build && npm test",
      "args": [],
      "isBackground": false,
      "problemMatcher": [
        "$tsc",
        "$eslint-stylish"
      ],
      "group": "build"
    },
    {
      "label": "TypeScript Type Check",
      "type": "shell",
      "command": "npm run typecheck",
      "isBackground": false,
      "problemMatcher": [
        "$tsc"
      ],
      "group": "build"
    },
    {
      "label": "Auto-Fix ESLint Issues",
      "type": "shell",
      "command": "npm run lint -- --fix",
      "isBackground": false,
      "problemMatcher": [
        "$eslint-stylish"
      ],
      "group": "build"
    },
    {
      "label": "Fix ESLint Issues and Report Status",
      "type": "shell",
      "command": "npm run lint -- --fix && npm run lint",
      "isBackground": false,
      "problemMatcher": [
        "$eslint-stylish"
      ],
      "group": "build"
    },
    {
      "label": "Complete Build Validation Workflow",
      "type": "shell",
      "command": "npm run typecheck && npm run build && npm test -- --passWithNoTests",
      "isBackground": false,
      "problemMatcher": [
        "$tsc",
        "$eslint-stylish"
      ],
      "group": "build"
    },
    {
      "label": "üöÄ Complete Project Validation",
      "type": "shell",
      "command": "echo 'üöÄ Starting Complete Build Validation...' && npm run typecheck && echo '‚úÖ TypeScript check passed' && npm run build && echo '‚úÖ Build completed successfully' && npm test -- --passWithNoTests && echo 'üéâ All validation steps completed successfully!'",
      "isBackground": false,
      "problemMatcher": [
        "$tsc",
        "$eslint-stylish"
      ],
      "group": "build"
    },
    {
      "label": "ü§ñ MCP Server for VS Code Copilot",
      "type": "shell",
      "command": "echo 'ü§ñ Testing MCP Server with VS Code Copilot focus...' && npm test -- src/__tests__/real-api-integration.test.ts --verbose && echo '‚úÖ MCP Server ready for VS Code Copilot integration!'",
      "isBackground": false,
      "problemMatcher": [],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared"
      }
    },
    {
      "label": "üîß Start MCP Development Server",
      "type": "shell",
      "command": "npm run dev",
      "isBackground": true,
      "problemMatcher": [
        "$tsc-watch"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "üß™ Safe Development Mode",
      "type": "shell",
      "command": "echo 'üß™ Starting Safe Development Mode...' && npm run dev:safe && echo '‚úÖ Safe development environment active!'",
      "isBackground": true,
      "problemMatcher": [
        "$tsc-watch"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "üõ°Ô∏è Quality Enforcement",
      "type": "shell",
      "command": "npx tsx scripts/development/quality-enforcement.ts",
      "group": {
        "kind": "test",
        "isDefault": false
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "üîç Quality Validation",
      "type": "shell",
      "command": "npx tsx scripts/development/quality-validation.ts",
      "group": {
        "kind": "test",
        "isDefault": false
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "‚ö° Fast Quality Gates",
      "type": "shell",
      "command": "npx tsx scripts/development/quality-gates.ts fast",
      "group": {
        "kind": "test",
        "isDefault": false
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "üö¶ Full Quality Gates",
      "type": "shell",
      "command": "npx tsx scripts/development/quality-gates.ts full",
      "group": {
        "kind": "test",
        "isDefault": false
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    }
  ]
}